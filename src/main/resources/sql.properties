# User
UserServices.findUserByUserId=select * from public."USER" where user_id = ?;
UserServices.findAll=select * from public."USER";
UserServices.createUser=INSERT INTO public."USER" (user_id, name, phone_ip, role, password, salt, failed_count, update_interval, initial_display_interval) VALUES (?, ?, ?, ?, ?, ?, 0, ?, ?);
UserServices.updateUserByUserId=update public."USER" set user_id=?, name=?, phone_ip=?, update_interval=?, initial_display_interval=?, role=?

# Authentication
AuthenticationService.findPasswordAndSaltByUserId=select password, salt from public."USER" where user_id = ?;
AuthenticationService.findFailedTimeByUserId=select failed_time from public."USER" where user_id= ?;
AuthenticationService.findFailedCountByUserId=select failed_count from public."USER" where user_id = ? ;
AuthenticationService.updateFailedCountByUserId=update public."USER" set failed_count = ? where user_id = ? ;
AuthenticationService.findFailedTimeAndFailedCountByUserId=select failed_time, failed_count from public."USER" where user_id = ? ;
AuthenticationService.updateFailedTimeAndFailedCountByUserId=update public."USER" set failed_count = ?, failed_time = ? where user_id = ? ;
AuthenticationService.countUserByUserId=select COUNT(*) as count from public."USER" where user_id = ? ;

# Comment
CommentDao.updateComment=update Comment set comment = :comment, updateDate = :updateDate where id = :id and claimId = :claimId

# Feedback
FeedbackDao.updateFeedbackIsCorrect=update Feedback set isCorrect = :isCorrect, updateDate = :updateDate where fraudScoreId = :fraudScoreId
FeedbackDao.updateFeedbackComment=update Feedback set comment = :comment, isCorrect = :isCorrect, updateDate = :updateDate where fraudScoreId = :fraudScoreId